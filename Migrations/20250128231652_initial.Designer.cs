// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TequioDemoTrack.Data;

#nullable disable

namespace TequioDemoTrack.Migrations
{
    [DbContext(typeof(TequioDemoTrackDbContext))]
    [Migration("20250128231652_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35",
                            Name = "Admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c977c52-bd60-4290-bff5-99d053e500b3",
                            Email = "admina@strator.comx",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAELsz8ukGqczRfY3L2ModpSNGvR8QPoDcAB8j8i1OANZ1tw8fUrnwNW30ChpHmlnjhQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "29aa9889-9db1-418d-8d6d-441521af05b2",
                            TwoFactorEnabled = false,
                            UserName = "Administrator"
                        },
                        new
                        {
                            Id = "d7f5e876-91fe-4e0b-a2c9-e6a07500f50e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4a6612c2-102f-4500-ab5b-50effb17ee1e",
                            Email = "jordan@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEE2bZcC2Wnb5gZiF558uehuv4tpkxt1nT07EKe70NJZqvFYvYLNAKWLKBYQM8SVKLg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d5f36a7-cfe1-43f4-91dc-3f0d85d0fc9d",
                            TwoFactorEnabled = false,
                            UserName = "SmithJordan"
                        },
                        new
                        {
                            Id = "f7b45b7d-3c74-4dfd-a8f9-20fe7b8cb062",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f7e7c53d-7563-4553-8d1d-08a08b7524ff",
                            Email = "taylor@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEKdMrGILze1z+0rwFWBmYHjtXwAeATmVbQkzW3A9vC/WRpb4FeuriYRosZ43bHIWhA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c1b8295b-2a6e-44f0-b607-0605a0ecc808",
                            TwoFactorEnabled = false,
                            UserName = "JohnsonTaylor"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            RoleId = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TequioDemoTrack.Models.AgeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AgeGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Group = "18-24"
                        },
                        new
                        {
                            Id = 2,
                            Group = "25-34"
                        },
                        new
                        {
                            Id = 3,
                            Group = "35-44"
                        },
                        new
                        {
                            Id = 4,
                            Group = "45-54"
                        },
                        new
                        {
                            Id = 5,
                            Group = "55-64"
                        },
                        new
                        {
                            Id = 6,
                            Group = "65-74"
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AgeGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgeGroupId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RaceId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "38016 Francisco Way, Kuvalisfort, Slovenia",
                            AgeGroupId = 3,
                            Email = "Joseph5@gmail.com",
                            GenderId = 3,
                            LocationId = 5,
                            Name = "Bernadette Stokes",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "6829 Brent Valley, Homenickstad, Thailand",
                            AgeGroupId = 5,
                            Email = "Rudolph.Streich@gmail.com",
                            GenderId = 2,
                            LocationId = 8,
                            Name = "Freeman Abernathy",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "37822 Heathcote Oval, North Nestorshire, Israel",
                            AgeGroupId = 6,
                            Email = "Alanis45@yahoo.com",
                            GenderId = 1,
                            LocationId = 3,
                            Name = "Foster Hilpert",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 4,
                            Address = "285 Toy Flat, Port Zena, Faroe Islands",
                            AgeGroupId = 2,
                            Email = "Cassie_Lesch@hotmail.com",
                            GenderId = 2,
                            LocationId = 1,
                            Name = "Merritt Gutkowski",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "5684 Wisoky Station, West Vicky, Kiribati",
                            AgeGroupId = 4,
                            Email = "Prudence80@gmail.com",
                            GenderId = 1,
                            LocationId = 8,
                            Name = "Ross Stroman",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 6,
                            Address = "365 Cassin Road, East Alan, Germany",
                            AgeGroupId = 5,
                            Email = "Madyson_Weimann30@gmail.com",
                            GenderId = 1,
                            LocationId = 1,
                            Name = "Lorine Skiles",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 7,
                            Address = "99590 Spencer Plain, West Rainatown, Denmark",
                            AgeGroupId = 4,
                            Email = "Felix.Wuckert51@gmail.com",
                            GenderId = 2,
                            LocationId = 3,
                            Name = "Marge Nader",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 8,
                            Address = "0918 Madonna Ville, West Berry, Peru",
                            AgeGroupId = 5,
                            Email = "Joesph61@yahoo.com",
                            GenderId = 1,
                            LocationId = 1,
                            Name = "Katelynn Corwin",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 9,
                            Address = "852 Herman Ville, North Carissaburgh, Western Sahara",
                            AgeGroupId = 6,
                            Email = "Raoul.Marquardt34@yahoo.com",
                            GenderId = 2,
                            LocationId = 9,
                            Name = "Dortha Volkman",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 10,
                            Address = "2793 Wunsch View, Hazelchester, Switzerland",
                            AgeGroupId = 2,
                            Email = "Hilbert_Streich71@gmail.com",
                            GenderId = 3,
                            LocationId = 5,
                            Name = "Jadyn King",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 11,
                            Address = "566 Otho Drives, Port Hildaborough, Serbia",
                            AgeGroupId = 5,
                            Email = "Donny84@yahoo.com",
                            GenderId = 3,
                            LocationId = 1,
                            Name = "Miller Goyette",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 12,
                            Address = "4807 Schneider Lock, North Jaclynfurt, Netherlands",
                            AgeGroupId = 4,
                            Email = "Karina.Grant50@hotmail.com",
                            GenderId = 3,
                            LocationId = 6,
                            Name = "Kayleigh King",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 13,
                            Address = "501 Collins Radial, North Jabari, Ethiopia",
                            AgeGroupId = 6,
                            Email = "Zackary_Lehner44@hotmail.com",
                            GenderId = 2,
                            LocationId = 2,
                            Name = "Gerhard Klocko",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 14,
                            Address = "34742 Bo Haven, Port Eda, China",
                            AgeGroupId = 2,
                            Email = "Donavon.Langworth71@yahoo.com",
                            GenderId = 3,
                            LocationId = 5,
                            Name = "Maud Yundt",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 15,
                            Address = "3621 Zieme Lake, New Davontebury, Gabon",
                            AgeGroupId = 1,
                            Email = "Karianne98@gmail.com",
                            GenderId = 3,
                            LocationId = 3,
                            Name = "Pablo Maggio",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 16,
                            Address = "103 Gudrun Island, North Nathanaelmouth, Latvia",
                            AgeGroupId = 1,
                            Email = "Dante.Crooks@yahoo.com",
                            GenderId = 2,
                            LocationId = 1,
                            Name = "Delphia Ankunding",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 17,
                            Address = "323 Haley Viaduct, Alvachester, El Salvador",
                            AgeGroupId = 3,
                            Email = "Llewellyn_Murray@gmail.com",
                            GenderId = 1,
                            LocationId = 5,
                            Name = "Dorthy Collins",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 18,
                            Address = "32607 Carlotta Trace, Brownton, Netherlands Antilles",
                            AgeGroupId = 3,
                            Email = "Easton_Cormier@gmail.com",
                            GenderId = 1,
                            LocationId = 6,
                            Name = "Kaitlyn Heller",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 19,
                            Address = "263 Emmett Burg, Jonesburgh, Jamaica",
                            AgeGroupId = 1,
                            Email = "Rhett4@gmail.com",
                            GenderId = 1,
                            LocationId = 10,
                            Name = "Bailey Spencer",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 20,
                            Address = "92369 Bartoletti Cliff, Monahanport, Kazakhstan",
                            AgeGroupId = 2,
                            Email = "Bernadine_Koch32@gmail.com",
                            GenderId = 1,
                            LocationId = 8,
                            Name = "Kole Donnelly",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 21,
                            Address = "0777 Zemlak Walk, South Araceli, Gambia",
                            AgeGroupId = 5,
                            Email = "Korey.Auer@gmail.com",
                            GenderId = 2,
                            LocationId = 9,
                            Name = "Dulce Larkin",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 22,
                            Address = "973 Emma Freeway, Jaskolskitown, Australia",
                            AgeGroupId = 1,
                            Email = "Raven.Reichel60@hotmail.com",
                            GenderId = 1,
                            LocationId = 6,
                            Name = "Retta Kunze",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 23,
                            Address = "22609 Johns Landing, Granvillefort, Guam",
                            AgeGroupId = 3,
                            Email = "Madie_Mayert69@hotmail.com",
                            GenderId = 1,
                            LocationId = 5,
                            Name = "Issac Kunze",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 24,
                            Address = "34545 Mueller Pine, Lake Vella, Andorra",
                            AgeGroupId = 3,
                            Email = "Wilfredo75@yahoo.com",
                            GenderId = 1,
                            LocationId = 3,
                            Name = "Tillman Paucek",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 25,
                            Address = "1204 Johnson Grove, West Julie, San Marino",
                            AgeGroupId = 3,
                            Email = "Marcel77@hotmail.com",
                            GenderId = 1,
                            LocationId = 2,
                            Name = "Jayson Beier",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 26,
                            Address = "0548 Lexi Road, New Tomas, Trinidad and Tobago",
                            AgeGroupId = 4,
                            Email = "Carlee.Windler@hotmail.com",
                            GenderId = 2,
                            LocationId = 6,
                            Name = "Dejuan Purdy",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 27,
                            Address = "4537 Lesch Mountain, Blandaview, Turkey",
                            AgeGroupId = 1,
                            Email = "Connor61@hotmail.com",
                            GenderId = 1,
                            LocationId = 7,
                            Name = "Shyanne Mertz",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 28,
                            Address = "28936 Adams Lodge, Ankundingtown, Aruba",
                            AgeGroupId = 5,
                            Email = "Buford.Kautzer@gmail.com",
                            GenderId = 3,
                            LocationId = 1,
                            Name = "Lue Bartell",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 29,
                            Address = "892 Olen Mill, New Justinaburgh, India",
                            AgeGroupId = 4,
                            Email = "Scottie24@gmail.com",
                            GenderId = 2,
                            LocationId = 10,
                            Name = "Jocelyn Waters",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 30,
                            Address = "1181 Willms Street, Christophemouth, Austria",
                            AgeGroupId = 3,
                            Email = "Libby.Paucek@gmail.com",
                            GenderId = 2,
                            LocationId = 2,
                            Name = "Elda Schamberger",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 31,
                            Address = "22759 Justice Crescent, Wardhaven, Guinea",
                            AgeGroupId = 6,
                            Email = "Kirsten_Morissette@yahoo.com",
                            GenderId = 3,
                            LocationId = 2,
                            Name = "Antonio Beer",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 32,
                            Address = "87030 Madisyn Plain, New Amayaton, Saint Helena",
                            AgeGroupId = 1,
                            Email = "Maximo.Senger@gmail.com",
                            GenderId = 3,
                            LocationId = 7,
                            Name = "Meredith Hintz",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 33,
                            Address = "96087 Ernestine Roads, Howeport, Burkina Faso",
                            AgeGroupId = 4,
                            Email = "Viola_Kuhn34@gmail.com",
                            GenderId = 1,
                            LocationId = 1,
                            Name = "Cindy Paucek",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 34,
                            Address = "286 Callie Shore, Stonestad, Iraq",
                            AgeGroupId = 4,
                            Email = "Geovany_OConnell72@hotmail.com",
                            GenderId = 3,
                            LocationId = 3,
                            Name = "Russ Weber",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 35,
                            Address = "7949 Alfreda Valleys, Schoenville, Bulgaria",
                            AgeGroupId = 5,
                            Email = "Selmer1@hotmail.com",
                            GenderId = 3,
                            LocationId = 8,
                            Name = "Gregoria Leuschke",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 36,
                            Address = "4289 Kunze Orchard, Lake Javonside, Grenada",
                            AgeGroupId = 5,
                            Email = "Devante_Lueilwitz@hotmail.com",
                            GenderId = 3,
                            LocationId = 6,
                            Name = "Casimir Wunsch",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 37,
                            Address = "021 Cummings Walk, Hanebury, Malawi",
                            AgeGroupId = 6,
                            Email = "Lola87@yahoo.com",
                            GenderId = 2,
                            LocationId = 10,
                            Name = "Earnest Larson",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 38,
                            Address = "523 Reyna Brook, Jerelport, Ukraine",
                            AgeGroupId = 4,
                            Email = "Braulio.Renner58@gmail.com",
                            GenderId = 1,
                            LocationId = 1,
                            Name = "Braxton Kuvalis",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 39,
                            Address = "633 Conn Crossroad, East Jaylan, Seychelles",
                            AgeGroupId = 3,
                            Email = "Ernesto.Aufderhar0@yahoo.com",
                            GenderId = 1,
                            LocationId = 2,
                            Name = "Hilario Morar",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 40,
                            Address = "36189 Shields Mountains, Kuphalmouth, Bouvet Island (Bouvetoya)",
                            AgeGroupId = 3,
                            Email = "Nikolas28@gmail.com",
                            GenderId = 1,
                            LocationId = 2,
                            Name = "Janick Considine",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 41,
                            Address = "6725 Kip Throughway, Greggton, Western Sahara",
                            AgeGroupId = 3,
                            Email = "Bryce_Pagac@hotmail.com",
                            GenderId = 1,
                            LocationId = 8,
                            Name = "Claudine Wilderman",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 42,
                            Address = "4124 Heathcote Trail, Lake Mariobury, Liechtenstein",
                            AgeGroupId = 1,
                            Email = "Shany_White74@hotmail.com",
                            GenderId = 1,
                            LocationId = 2,
                            Name = "Gussie Yost",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 43,
                            Address = "22814 Rylan Junctions, Denesikport, South Georgia and the South Sandwich Islands",
                            AgeGroupId = 5,
                            Email = "Daphne89@hotmail.com",
                            GenderId = 1,
                            LocationId = 8,
                            Name = "Myah Turner",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 44,
                            Address = "816 Neoma View, Hesterton, Nicaragua",
                            AgeGroupId = 6,
                            Email = "Maryjane.Walter@hotmail.com",
                            GenderId = 1,
                            LocationId = 4,
                            Name = "Jason Murphy",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 45,
                            Address = "63325 Hane Islands, North Ocie, Bosnia and Herzegovina",
                            AgeGroupId = 3,
                            Email = "Gaetano_Jakubowski@gmail.com",
                            GenderId = 3,
                            LocationId = 5,
                            Name = "Guillermo Kemmer",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 46,
                            Address = "3757 Boyer Forge, Vonland, India",
                            AgeGroupId = 2,
                            Email = "Harold_Goodwin68@yahoo.com",
                            GenderId = 1,
                            LocationId = 10,
                            Name = "Laron Little",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 47,
                            Address = "93956 Wolf Park, South Candicefurt, Somalia",
                            AgeGroupId = 1,
                            Email = "Penelope80@gmail.com",
                            GenderId = 2,
                            LocationId = 9,
                            Name = "Burnice Quitzon",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 48,
                            Address = "77957 Jared Extension, Lake Markusstad, United States Minor Outlying Islands",
                            AgeGroupId = 6,
                            Email = "Zoie35@gmail.com",
                            GenderId = 3,
                            LocationId = 1,
                            Name = "Jamal Schoen",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 49,
                            Address = "283 Andreanne Falls, Zemlaktown, Poland",
                            AgeGroupId = 4,
                            Email = "Nova_Cole14@gmail.com",
                            GenderId = 2,
                            LocationId = 5,
                            Name = "Imogene Fay",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 50,
                            Address = "5890 Corwin Mills, New Zetta, Tajikistan",
                            AgeGroupId = 1,
                            Email = "Cathy.Kuvalis@gmail.com",
                            GenderId = 3,
                            LocationId = 8,
                            Name = "Sabrina Bergnaum",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 51,
                            Address = "6230 Shaylee Islands, Jonesland, Egypt",
                            AgeGroupId = 4,
                            Email = "Josh.Mraz@hotmail.com",
                            GenderId = 2,
                            LocationId = 8,
                            Name = "Eleanore Keeling",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 52,
                            Address = "374 Ellsworth Loop, Starkburgh, American Samoa",
                            AgeGroupId = 6,
                            Email = "Hailee15@hotmail.com",
                            GenderId = 1,
                            LocationId = 6,
                            Name = "Green Stehr",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 53,
                            Address = "253 Lakin Wall, Clydeberg, Marshall Islands",
                            AgeGroupId = 3,
                            Email = "Tressa_Wiegand@gmail.com",
                            GenderId = 3,
                            LocationId = 5,
                            Name = "Antone Schimmel",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 54,
                            Address = "4288 Corwin Island, Domingoton, Liberia",
                            AgeGroupId = 1,
                            Email = "Edd_Spencer79@yahoo.com",
                            GenderId = 1,
                            LocationId = 10,
                            Name = "Cortez Lueilwitz",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 55,
                            Address = "7707 Champlin Manor, Giovanniport, Malaysia",
                            AgeGroupId = 2,
                            Email = "Trisha.Fahey0@gmail.com",
                            GenderId = 2,
                            LocationId = 3,
                            Name = "Helene Beahan",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 56,
                            Address = "406 Kovacek Skyway, Gregoryville, New Caledonia",
                            AgeGroupId = 3,
                            Email = "Frederik.Emard@gmail.com",
                            GenderId = 3,
                            LocationId = 1,
                            Name = "Malinda Herman",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 57,
                            Address = "67708 Johnny Lodge, South Minerva, Falkland Islands (Malvinas)",
                            AgeGroupId = 3,
                            Email = "Kaden55@yahoo.com",
                            GenderId = 1,
                            LocationId = 6,
                            Name = "Lawson O'Keefe",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 58,
                            Address = "965 Altenwerth Island, South Malliefurt, Ukraine",
                            AgeGroupId = 3,
                            Email = "Xander83@hotmail.com",
                            GenderId = 3,
                            LocationId = 10,
                            Name = "Ollie Beier",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 59,
                            Address = "401 Johns Mills, West Verda, Djibouti",
                            AgeGroupId = 5,
                            Email = "Devyn_Hegmann50@gmail.com",
                            GenderId = 3,
                            LocationId = 3,
                            Name = "Elmira Kuhlman",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 60,
                            Address = "1173 Grimes Locks, Lake Yasmine, Bosnia and Herzegovina",
                            AgeGroupId = 2,
                            Email = "Ryder15@yahoo.com",
                            GenderId = 1,
                            LocationId = 9,
                            Name = "Brook Keebler",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 61,
                            Address = "90870 Raphael Park, New Hermina, Heard Island and McDonald Islands",
                            AgeGroupId = 2,
                            Email = "Orie_Herzog@yahoo.com",
                            GenderId = 1,
                            LocationId = 7,
                            Name = "Sadye Ortiz",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 62,
                            Address = "108 Ortiz Pass, South Naomishire, Honduras",
                            AgeGroupId = 3,
                            Email = "Josianne_Osinski@gmail.com",
                            GenderId = 3,
                            LocationId = 4,
                            Name = "Kathlyn Dare",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 63,
                            Address = "024 Watsica Walk, Lianaside, South Africa",
                            AgeGroupId = 2,
                            Email = "Tyrell.Ledner@yahoo.com",
                            GenderId = 1,
                            LocationId = 5,
                            Name = "Rhiannon Cartwright",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 64,
                            Address = "0370 Leonie Forest, Lucileberg, Kiribati",
                            AgeGroupId = 5,
                            Email = "Baby_Jaskolski@hotmail.com",
                            GenderId = 2,
                            LocationId = 4,
                            Name = "Aaliyah Ward",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 65,
                            Address = "715 Emery Circle, North Marisolmouth, South Africa",
                            AgeGroupId = 1,
                            Email = "Kaitlyn_Volkman86@yahoo.com",
                            GenderId = 1,
                            LocationId = 3,
                            Name = "Maximo Rath",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 66,
                            Address = "088 Hannah Locks, Wilfridhaven, Senegal",
                            AgeGroupId = 4,
                            Email = "Joshuah22@hotmail.com",
                            GenderId = 2,
                            LocationId = 9,
                            Name = "Adrian Bernier",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 67,
                            Address = "1533 Jeff Viaduct, Yasminefort, Netherlands Antilles",
                            AgeGroupId = 2,
                            Email = "Ward.Koss30@hotmail.com",
                            GenderId = 2,
                            LocationId = 7,
                            Name = "Eula Kling",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 68,
                            Address = "8665 Legros Mount, Heathcotetown, Ukraine",
                            AgeGroupId = 5,
                            Email = "Stefan71@gmail.com",
                            GenderId = 3,
                            LocationId = 6,
                            Name = "Beryl Emmerich",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 69,
                            Address = "75382 Reilly Knoll, Douglasmouth, Bosnia and Herzegovina",
                            AgeGroupId = 3,
                            Email = "Coty_Champlin@gmail.com",
                            GenderId = 1,
                            LocationId = 6,
                            Name = "Ansley Price",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 70,
                            Address = "658 Moore Inlet, East Laceyside, Gambia",
                            AgeGroupId = 6,
                            Email = "Zetta.Bayer32@gmail.com",
                            GenderId = 3,
                            LocationId = 5,
                            Name = "Paolo Marquardt",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 71,
                            Address = "53363 Chaim Corners, Huelsfort, Indonesia",
                            AgeGroupId = 5,
                            Email = "Cameron_OConner23@gmail.com",
                            GenderId = 2,
                            LocationId = 8,
                            Name = "Trinity Crona",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 72,
                            Address = "31878 Shad Forges, Rowenaville, Lithuania",
                            AgeGroupId = 1,
                            Email = "Guadalupe23@yahoo.com",
                            GenderId = 1,
                            LocationId = 10,
                            Name = "Agustina Kovacek",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 73,
                            Address = "9812 Lockman Canyon, Lake Rafaela, Central African Republic",
                            AgeGroupId = 3,
                            Email = "Jean.Heathcote96@gmail.com",
                            GenderId = 3,
                            LocationId = 8,
                            Name = "Virginie Stoltenberg",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 74,
                            Address = "498 Nicolas Underpass, East Paulinemouth, Indonesia",
                            AgeGroupId = 4,
                            Email = "Brendon.Schaden@yahoo.com",
                            GenderId = 2,
                            LocationId = 4,
                            Name = "Gabriel Kub",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 75,
                            Address = "6070 Josie Station, South Nikoborough, Greece",
                            AgeGroupId = 5,
                            Email = "Alicia14@yahoo.com",
                            GenderId = 3,
                            LocationId = 4,
                            Name = "Kira Terry",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 76,
                            Address = "101 Dorothea Villages, Lake Adolphusmouth, Mali",
                            AgeGroupId = 2,
                            Email = "Miller75@hotmail.com",
                            GenderId = 2,
                            LocationId = 8,
                            Name = "Zack Witting",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 77,
                            Address = "964 Beier Unions, Ferneberg, New Zealand",
                            AgeGroupId = 1,
                            Email = "Ruth68@hotmail.com",
                            GenderId = 1,
                            LocationId = 9,
                            Name = "Ariel Stanton",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 78,
                            Address = "32028 Claudine Cape, Cassinborough, Uganda",
                            AgeGroupId = 2,
                            Email = "Mark48@gmail.com",
                            GenderId = 1,
                            LocationId = 3,
                            Name = "Justina Buckridge",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 79,
                            Address = "2464 Louie Pine, Heathcoteborough, Mongolia",
                            AgeGroupId = 6,
                            Email = "Cornelius_Swaniawski3@hotmail.com",
                            GenderId = 1,
                            LocationId = 5,
                            Name = "Kareem Labadie",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 80,
                            Address = "56058 Damon Knoll, Nathanialfurt, Sudan",
                            AgeGroupId = 6,
                            Email = "Zander_Wuckert42@hotmail.com",
                            GenderId = 2,
                            LocationId = 9,
                            Name = "Armand Jenkins",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 81,
                            Address = "19056 Sawayn Dam, West Oma, Saint Barthelemy",
                            AgeGroupId = 4,
                            Email = "Colleen_Conroy8@yahoo.com",
                            GenderId = 1,
                            LocationId = 2,
                            Name = "Virginie Treutel",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 82,
                            Address = "725 Jones Stream, South Ezequielstad, Gabon",
                            AgeGroupId = 1,
                            Email = "Mossie_Bechtelar86@hotmail.com",
                            GenderId = 3,
                            LocationId = 7,
                            Name = "Pete Runolfsdottir",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 83,
                            Address = "8691 Edwardo Unions, North Marinaville, Cyprus",
                            AgeGroupId = 5,
                            Email = "Ronaldo.Macejkovic@gmail.com",
                            GenderId = 3,
                            LocationId = 7,
                            Name = "Lexus Terry",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 84,
                            Address = "15310 Lucienne Village, West Opalville, Kenya",
                            AgeGroupId = 5,
                            Email = "Dameon.Reynolds46@hotmail.com",
                            GenderId = 3,
                            LocationId = 4,
                            Name = "Rosario Carter",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 85,
                            Address = "5087 Towne Locks, Port Haleighton, Madagascar",
                            AgeGroupId = 3,
                            Email = "Timmy.Kohler@yahoo.com",
                            GenderId = 3,
                            LocationId = 8,
                            Name = "Eleonore Mayer",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 86,
                            Address = "2665 Gussie Mountain, North Scarletttown, Poland",
                            AgeGroupId = 3,
                            Email = "Jevon80@hotmail.com",
                            GenderId = 2,
                            LocationId = 3,
                            Name = "Carmine Lehner",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 87,
                            Address = "19591 Skiles Ports, Garlandton, Kuwait",
                            AgeGroupId = 5,
                            Email = "Abner.Shields@yahoo.com",
                            GenderId = 3,
                            LocationId = 10,
                            Name = "Morton Fay",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 88,
                            Address = "15227 Grimes Land, Port Lexusbury, Macedonia",
                            AgeGroupId = 5,
                            Email = "Lexi6@yahoo.com",
                            GenderId = 2,
                            LocationId = 6,
                            Name = "Sydni Stoltenberg",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 89,
                            Address = "5403 Keagan Tunnel, Stromanshire, Marshall Islands",
                            AgeGroupId = 1,
                            Email = "Natalie.Quitzon83@yahoo.com",
                            GenderId = 3,
                            LocationId = 3,
                            Name = "Nedra Sporer",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 90,
                            Address = "52670 Price Underpass, New Elenorville, Macao",
                            AgeGroupId = 5,
                            Email = "Zachariah.Borer@yahoo.com",
                            GenderId = 2,
                            LocationId = 4,
                            Name = "Lilian Schultz",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 91,
                            Address = "79295 Maximillia Inlet, South Madilynbury, Puerto Rico",
                            AgeGroupId = 6,
                            Email = "Annabell_Miller@yahoo.com",
                            GenderId = 3,
                            LocationId = 2,
                            Name = "Maida Bins",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 92,
                            Address = "31428 Windler Locks, Mathildebury, Comoros",
                            AgeGroupId = 6,
                            Email = "Mittie.OKon@hotmail.com",
                            GenderId = 1,
                            LocationId = 1,
                            Name = "Maxie Kassulke",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 93,
                            Address = "0200 Neva Glen, Krajcikshire, Guernsey",
                            AgeGroupId = 1,
                            Email = "Mellie.Dicki@gmail.com",
                            GenderId = 2,
                            LocationId = 10,
                            Name = "Agustin Wilkinson",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 94,
                            Address = "63710 Dulce Islands, Hauckburgh, Mexico",
                            AgeGroupId = 3,
                            Email = "Barrett.Cartwright62@yahoo.com",
                            GenderId = 2,
                            LocationId = 8,
                            Name = "Ernie Koelpin",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 95,
                            Address = "6494 Lind Rapids, Lake Richmond, Liechtenstein",
                            AgeGroupId = 3,
                            Email = "Archibald.Dietrich@yahoo.com",
                            GenderId = 3,
                            LocationId = 8,
                            Name = "Armando Lesch",
                            RaceId = 1
                        },
                        new
                        {
                            Id = 96,
                            Address = "383 Bergnaum Street, East Wilford, South Georgia and the South Sandwich Islands",
                            AgeGroupId = 1,
                            Email = "Dereck5@gmail.com",
                            GenderId = 3,
                            LocationId = 1,
                            Name = "Lorenza Goodwin",
                            RaceId = 2
                        },
                        new
                        {
                            Id = 97,
                            Address = "755 Steuber Hollow, Carterland, United States Minor Outlying Islands",
                            AgeGroupId = 2,
                            Email = "Nicolette_Daniel@yahoo.com",
                            GenderId = 3,
                            LocationId = 6,
                            Name = "Tressie Bernier",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 98,
                            Address = "81637 VonRueden Road, Marksbury, Ghana",
                            AgeGroupId = 4,
                            Email = "Tanner71@yahoo.com",
                            GenderId = 3,
                            LocationId = 4,
                            Name = "Giovani Bednar",
                            RaceId = 4
                        },
                        new
                        {
                            Id = 99,
                            Address = "836 Leuschke Route, Port Britneyland, Dominica",
                            AgeGroupId = 4,
                            Email = "Josefina.Hackett71@gmail.com",
                            GenderId = 2,
                            LocationId = 9,
                            Name = "Buford Kuhn",
                            RaceId = 3
                        },
                        new
                        {
                            Id = 100,
                            Address = "833 Delia Mountains, North Myrticehaven, Belgium",
                            AgeGroupId = 6,
                            Email = "Ashley_Harris@yahoo.com",
                            GenderId = 3,
                            LocationId = 10,
                            Name = "Myrl Block",
                            RaceId = 3
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GenderValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenderValue = "Male"
                        },
                        new
                        {
                            Id = 2,
                            GenderValue = "Female"
                        },
                        new
                        {
                            Id = 3,
                            GenderValue = "Non-binary"
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationValue = "Downtown LA"
                        },
                        new
                        {
                            Id = 2,
                            LocationValue = "Hollywood"
                        },
                        new
                        {
                            Id = 3,
                            LocationValue = "Beverly Hills"
                        },
                        new
                        {
                            Id = 4,
                            LocationValue = "Santa Monica"
                        },
                        new
                        {
                            Id = 5,
                            LocationValue = "Venice"
                        },
                        new
                        {
                            Id = 6,
                            LocationValue = "Pasadena"
                        },
                        new
                        {
                            Id = 7,
                            LocationValue = "Westwood"
                        },
                        new
                        {
                            Id = 8,
                            LocationValue = "Silver Lake"
                        },
                        new
                        {
                            Id = 9,
                            LocationValue = "Echo Park"
                        },
                        new
                        {
                            Id = 10,
                            LocationValue = "Culver City"
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pack")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "/Blanco.png",
                            Ingredients = "El Mexicano® Tequila Blanco (Certified Additive-Free, 100% De Agave), Sparkling Water, Natural Lime Flavor, Citric Acid",
                            Name = "Sparkling Blanco",
                            Pack = 8,
                            Price = 39.98m
                        },
                        new
                        {
                            Id = 2,
                            Image = "/Blanco.png",
                            Ingredients = "El Mexicano® Tequila Blanco (Certified Additive-Free, 100% De Agave), Sparkling Water, Natural Lime Flavor, Citric Acid",
                            Name = "Sparkling Blanco",
                            Pack = 24,
                            Price = 119.94m
                        },
                        new
                        {
                            Id = 3,
                            Image = "/Repasado.png",
                            Ingredients = "El Mexicano® Tequila Repasado (Certified Additive-Free, 100% De Agave), Sparkling Water, Natural Lime Flavor, Citric Acid",
                            Name = "Sparkling Repasado",
                            Pack = 8,
                            Price = 39.98m
                        },
                        new
                        {
                            Id = 4,
                            Image = "/Repasado.png",
                            Ingredients = "El Mexicano® Tequila Repasado (Certified Additive-Free, 100% De Agave), Sparkling Water, Natural Lime Flavor, Citric Acid",
                            Name = "Sparkling Repasado",
                            Pack = 24,
                            Price = 119.94m
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 3,
                            PurchaseDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 5,
                            PurchaseDate = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 7,
                            PurchaseDate = new DateTime(2023, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 9,
                            PurchaseDate = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 2,
                            PurchaseDate = new DateTime(2023, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 4,
                            PurchaseDate = new DateTime(2023, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 6,
                            PurchaseDate = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 8,
                            PurchaseDate = new DateTime(2023, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 10,
                            PurchaseDate = new DateTime(2023, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 3,
                            PurchaseDate = new DateTime(2024, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 13,
                            CustomerId = 5,
                            PurchaseDate = new DateTime(2024, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 14,
                            CustomerId = 7,
                            PurchaseDate = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 15,
                            CustomerId = 9,
                            PurchaseDate = new DateTime(2024, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 16,
                            CustomerId = 2,
                            PurchaseDate = new DateTime(2024, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 17,
                            CustomerId = 4,
                            PurchaseDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 18,
                            CustomerId = 6,
                            PurchaseDate = new DateTime(2024, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 19,
                            CustomerId = 8,
                            PurchaseDate = new DateTime(2024, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 20,
                            CustomerId = 10,
                            PurchaseDate = new DateTime(2024, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 21,
                            CustomerId = 1,
                            PurchaseDate = new DateTime(2025, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 22,
                            CustomerId = 3,
                            PurchaseDate = new DateTime(2025, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 23,
                            CustomerId = 5,
                            PurchaseDate = new DateTime(2025, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 24,
                            CustomerId = 7,
                            PurchaseDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 25,
                            CustomerId = 9,
                            PurchaseDate = new DateTime(2025, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 26,
                            CustomerId = 2,
                            PurchaseDate = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 27,
                            CustomerId = 4,
                            PurchaseDate = new DateTime(2025, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 28,
                            CustomerId = 6,
                            PurchaseDate = new DateTime(2025, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 29,
                            CustomerId = 8,
                            PurchaseDate = new DateTime(2025, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 30,
                            CustomerId = 10,
                            PurchaseDate = new DateTime(2025, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.PurchaseProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            PurchaseId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 3,
                            PurchaseId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 2,
                            PurchaseId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 1,
                            PurchaseId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 3,
                            PurchaseId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 2,
                            PurchaseId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 1,
                            PurchaseId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 2,
                            PurchaseId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 3,
                            PurchaseId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 1,
                            PurchaseId = 5,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 2,
                            PurchaseId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 3,
                            PurchaseId = 6,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 1,
                            PurchaseId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 2,
                            PurchaseId = 7,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 3,
                            PurchaseId = 8,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 1,
                            PurchaseId = 8,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 2,
                            PurchaseId = 9,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 3,
                            PurchaseId = 9,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 1,
                            PurchaseId = 10,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 2,
                            PurchaseId = 10,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 21,
                            ProductId = 3,
                            PurchaseId = 11,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 22,
                            ProductId = 2,
                            PurchaseId = 11,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 23,
                            ProductId = 1,
                            PurchaseId = 12,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 24,
                            ProductId = 3,
                            PurchaseId = 12,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 25,
                            ProductId = 2,
                            PurchaseId = 13,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 26,
                            ProductId = 1,
                            PurchaseId = 13,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 27,
                            ProductId = 3,
                            PurchaseId = 14,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 28,
                            ProductId = 2,
                            PurchaseId = 14,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 29,
                            ProductId = 1,
                            PurchaseId = 15,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 30,
                            ProductId = 3,
                            PurchaseId = 15,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 31,
                            ProductId = 2,
                            PurchaseId = 16,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 32,
                            ProductId = 1,
                            PurchaseId = 16,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 33,
                            ProductId = 3,
                            PurchaseId = 17,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 34,
                            ProductId = 2,
                            PurchaseId = 17,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 35,
                            ProductId = 1,
                            PurchaseId = 18,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 36,
                            ProductId = 3,
                            PurchaseId = 18,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 37,
                            ProductId = 2,
                            PurchaseId = 19,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 38,
                            ProductId = 1,
                            PurchaseId = 19,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            ProductId = 3,
                            PurchaseId = 20,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 40,
                            ProductId = 2,
                            PurchaseId = 20,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 41,
                            ProductId = 1,
                            PurchaseId = 21,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 42,
                            ProductId = 3,
                            PurchaseId = 21,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 43,
                            ProductId = 2,
                            PurchaseId = 22,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 44,
                            ProductId = 1,
                            PurchaseId = 22,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 45,
                            ProductId = 3,
                            PurchaseId = 23,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 46,
                            ProductId = 2,
                            PurchaseId = 23,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 47,
                            ProductId = 1,
                            PurchaseId = 24,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 48,
                            ProductId = 3,
                            PurchaseId = 24,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 49,
                            ProductId = 2,
                            PurchaseId = 25,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 50,
                            ProductId = 1,
                            PurchaseId = 25,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 51,
                            ProductId = 3,
                            PurchaseId = 26,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 52,
                            ProductId = 2,
                            PurchaseId = 26,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 53,
                            ProductId = 1,
                            PurchaseId = 27,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 54,
                            ProductId = 3,
                            PurchaseId = 27,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 55,
                            ProductId = 2,
                            PurchaseId = 28,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 56,
                            ProductId = 1,
                            PurchaseId = 28,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 57,
                            ProductId = 3,
                            PurchaseId = 29,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 58,
                            ProductId = 2,
                            PurchaseId = 29,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 59,
                            ProductId = 1,
                            PurchaseId = 30,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 60,
                            ProductId = 3,
                            PurchaseId = 30,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RaceValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RaceValue = "Asian"
                        },
                        new
                        {
                            Id = 2,
                            RaceValue = "Black"
                        },
                        new
                        {
                            Id = 3,
                            RaceValue = "White"
                        },
                        new
                        {
                            Id = 4,
                            RaceValue = "Hispanic"
                        });
                });

            modelBuilder.Entity("TequioDemoTrack.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "101 Main Street",
                            FirstName = "Admina",
                            IdentityUserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            IsActive = false,
                            LastName = "Strator",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Address = "202 Oak Avenue",
                            FirstName = "Jordan",
                            IdentityUserId = "d7f5e876-91fe-4e0b-a2c9-e6a07500f50e",
                            IsActive = false,
                            LastName = "Smith",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Address = "303 Pine Street",
                            FirstName = "Taylor",
                            IdentityUserId = "f7b45b7d-3c74-4dfd-a8f9-20fe7b8cb062",
                            IsActive = false,
                            LastName = "Johnson",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Customer", b =>
                {
                    b.HasOne("TequioDemoTrack.Models.AgeGroup", "AgeGroup")
                        .WithMany("Customers")
                        .HasForeignKey("AgeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TequioDemoTrack.Models.Gender", "Gender")
                        .WithMany("Customers")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TequioDemoTrack.Models.Location", "Location")
                        .WithMany("Customers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TequioDemoTrack.Models.Race", "Race")
                        .WithMany("Customers")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeGroup");

                    b.Navigation("Gender");

                    b.Navigation("Location");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Purchase", b =>
                {
                    b.HasOne("TequioDemoTrack.Models.Customer", "Customer")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TequioDemoTrack.Models.UserProfile", "UserProfile")
                        .WithMany("Purchases")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.PurchaseProduct", b =>
                {
                    b.HasOne("TequioDemoTrack.Models.Product", "Product")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TequioDemoTrack.Models.Purchase", "Purchase")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.UserProfile", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.AgeGroup", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Customer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Gender", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Location", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Product", b =>
                {
                    b.Navigation("PurchaseProducts");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Purchase", b =>
                {
                    b.Navigation("PurchaseProducts");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.Race", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TequioDemoTrack.Models.UserProfile", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
